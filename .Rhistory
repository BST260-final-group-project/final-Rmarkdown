install.packages("jsonlite")
library(jsonlite)
l <- fromJSON(
'{
"glossary": {
"title": "example glossary",
"GlossDiv": {
"title": "S",
"GlossList": {
"GlossEntry": {
"ID": "SGML",
"SortAs": "SGML",
"GlossTerm": "Standard Generalized Markup Language",
"Acronym": "SGML",
"Abbrev": "ISO 8879:1986",
"GlossDef": {
"para": "A meta-markup language, used to create markup languages such as DocBook.",
"GlossSeeAlso": ["GML", "XML"]
},
"GlossSee": "markup"
}
}
}
}
}'
)
l$glossary$title
l$glossary$GlossDiv$GlossList$GlossEntry$GlossDef
install.packages("mongolite")
library(mongolite)
mhealth <- mongo(db = "mhealth")
sleep <- mongo(collection = "sleep", db = "mhealth")
system("mongoimport --db mhealth --collection sleep --drop --file ~/Dropbox/Data17/mHealth/sleep-duration.json")
install.packages("corrplot")
install.packages("packcircles")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
dat_scaled_onehot <- read_csv("~/Desktop/feature_fillna_scaled_onehot.csv")
library(dplyr)
library(readr)
dat_scaled_onehot <- read_csv("./feature_fillna_scaled_onehot.csv")
dat_scale_small <- dat_scaled_onehot %>% filter(source=="train")
#correlation
library(corrplot)
correlations<-cor(dat_scale_small[,unlist(lapply(dat_scale_small, is.numeric))])
# only want the columns that show strong correlations with SalePrice
corr.SalePrice <- as.matrix(sort(correlations[,'SalePrice'], decreasing = TRUE))
corr.idx <- names(which(apply(corr.SalePrice, 1, function(x) (x > 0.5 | x < -0.5))))
corrplot(as.matrix(correlations[corr.idx,corr.idx]), type = 'upper', method='color', addCoef.col = 'black', tl.cex = .7,cl.cex = .7, number.cex=.7)
library(dplyr)
library(readr)
dat_scaled_onehot <- read_csv("./feature_fillna_scaled_onehot.csv")
dat_scale_small <- dat_scaled_onehot %>% filter(source=="train")
#correlation
library(corrplot)
correlations<-cor(dat_scale_small[,unlist(lapply(dat_scale_small, is.numeric))])
# only want the columns that show strong correlations with SalePrice
corr.SalePrice <- as.matrix(sort(correlations[,'SalePrice'], decreasing = TRUE))
corr.idx <- names(which(apply(corr.SalePrice, 1, function(x) (x > 0.5 | x < -0.5))))
corrplot(as.matrix(correlations[corr.idx,corr.idx]), type = 'upper', method='color', addCoef.col = 'black', tl.cex = .7,cl.cex = .7, number.cex=.7)
